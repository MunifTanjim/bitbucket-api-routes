[
  {
    "apiName": "Get All Subject Types",
    "consumes": [
      "application/json"
    ],
    "description": "Returns the webhook resource or subject types on which webhooks can\nbe registered.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/hook_events#get",
    "method": "GET",
    "parameters": [],
    "path": "/hook_events",
    "responses": {
      "200": {
        "description": "A mapping of resource/subject types pointing to their individual event types.",
        "schema": {
          "$ref": "#/definitions/subject_types"
        }
      }
    }
  },
  {
    "apiName": "List",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a paginated list of all valid webhook events for the\nspecified entity.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/hook_events/%7Bsubject_type%7D#get",
    "method": "GET",
    "parameters": [
      {
        "description": "A resource or subject type.",
        "enum": [
          "user",
          "repository",
          "team"
        ],
        "in": "path",
        "name": "subject_type",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "subject_type",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/hook_events/{subject_type}",
    "responses": {
      "200": {
        "description": "A paginated list of webhook types available to subscribe on.",
        "schema": {
          "$ref": "#/definitions/paginated_hook_events"
        }
      },
      "404": {
        "description": "If an invalid `{subject_type}` value was specified.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List For Repo",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a paginated list of webhooks installed on this repository.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/hooks#get",
    "method": "GET",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/hooks",
    "responses": {
      "200": {
        "description": "The paginated list of installed webhooks.",
        "schema": {
          "$ref": "#/definitions/paginated_webhook_subscriptions"
        }
      },
      "403": {
        "description": "If the authenticated user does not have permission to access the webhooks.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Create",
    "consumes": [
      "application/json"
    ],
    "description": "Creates a new webhook on the specified repository.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/hooks#post",
    "method": "POST",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "body",
        "name": "_body",
        "required": true
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/hooks",
    "responses": {
      "201": {
        "description": "If the webhook was registered successfully.",
        "headers": {
          "Location": {
            "description": "The URL of new newly created webhook.",
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "403": {
        "description": "If the authenticated user does not have permission to install webhooks on the specified repository.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Delete",
    "consumes": [
      "application/json"
    ],
    "description": "Deletes the specified webhook subscription from the given\nrepository.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/hooks/%7Buid%7D#delete",
    "method": "DELETE",
    "parameters": [
      {
        "description": "The installed webhook's id",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/hooks/{uid}",
    "responses": {
      "204": {
        "description": "When the webhook was deleted successfully"
      },
      "403": {
        "description": "If the authenticated user does not have permission to delete the webhook.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the webhook or repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get",
    "consumes": [
      "application/json"
    ],
    "description": "Returns the webhook with the specified id installed on the specified\nrepository.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/hooks/%7Buid%7D#get",
    "method": "GET",
    "parameters": [
      {
        "description": "The installed webhook's id.",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/hooks/{uid}",
    "responses": {
      "200": {
        "description": "The webhook subscription object.",
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "404": {
        "description": "If the webhook or repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Update",
    "consumes": [
      "application/json"
    ],
    "description": "Updates the specified webhook subscription.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/hooks/%7Buid%7D#put",
    "method": "PUT",
    "parameters": [
      {
        "description": "The installed webhook's id",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/hooks/{uid}",
    "responses": {
      "200": {
        "description": "The webhook subscription object.",
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "403": {
        "description": "If the authenticated user does not have permission to update the webhook.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the webhook or repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List For Team",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a paginated list of webhooks installed on this team.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/teams/%7Busername%7D/hooks#get",
    "method": "GET",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/teams/{username}/hooks",
    "responses": {
      "200": {
        "description": "The paginated list of installed webhooks.",
        "schema": {
          "$ref": "#/definitions/paginated_webhook_subscriptions"
        }
      },
      "403": {
        "description": "If the authenticated user is not an admin on the specified team.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the specified team does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Create For Team",
    "consumes": [
      "application/json"
    ],
    "description": "Creates a new webhook on the specified team.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/teams/%7Busername%7D/hooks#post",
    "method": "POST",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/teams/{username}/hooks",
    "responses": {
      "201": {
        "description": "The newly installed webhook.",
        "headers": {
          "Location": {
            "description": "The URL of new newly created webhook.",
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "403": {
        "description": "If the authenticated user is not an admin on the specified team.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the specified team does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Delete For Team",
    "consumes": [
      "application/json"
    ],
    "description": "Deletes the specified webhook subscription from the given team\naccount.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/teams/%7Busername%7D/hooks/%7Buid%7D#delete",
    "method": "DELETE",
    "parameters": [
      {
        "description": "The installed webhook's id",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/teams/{username}/hooks/{uid}",
    "responses": {
      "204": {
        "description": "When the webhook was deleted successfully"
      },
      "403": {
        "description": "If the authenticated user does not have permission to delete the webhook.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the webhook or team does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get For Team",
    "consumes": [
      "application/json"
    ],
    "description": "Returns the webhook with the specified id installed on the given\nteam account.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/teams/%7Busername%7D/hooks/%7Buid%7D#get",
    "method": "GET",
    "parameters": [
      {
        "description": "The installed webhook's id.",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/teams/{username}/hooks/{uid}",
    "responses": {
      "200": {
        "description": "The webhook subscription object.",
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "404": {
        "description": "If the webhook or team does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Update For Team",
    "consumes": [
      "application/json"
    ],
    "description": "Updates the specified webhook subscription.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/teams/%7Busername%7D/hooks/%7Buid%7D#put",
    "method": "PUT",
    "parameters": [
      {
        "description": "The installed webhook's id",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/teams/{username}/hooks/{uid}",
    "responses": {
      "200": {
        "description": "The webhook subscription object.",
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "403": {
        "description": "If the authenticated user does not have permission to update the webhook.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the webhook or team does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List For User",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a paginated list of webhooks installed on this user account.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/users/%7Busername%7D/hooks#get",
    "method": "GET",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/users/{username}/hooks",
    "responses": {
      "200": {
        "description": "The paginated list of installed webhooks.",
        "schema": {
          "$ref": "#/definitions/paginated_webhook_subscriptions"
        }
      },
      "403": {
        "description": "If the authenticated user is accessing an account other than their own.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the specified account does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Create For User",
    "consumes": [
      "application/json"
    ],
    "description": "Creates a new webhook on the specified user account.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/users/%7Busername%7D/hooks#post",
    "method": "POST",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/users/{username}/hooks",
    "responses": {
      "201": {
        "description": "The newly installed webhook.",
        "headers": {
          "Location": {
            "description": "The URL of new newly created webhook.",
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "403": {
        "description": "If the authenticated user is accessing an account other than their own.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the specified account does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Delete For User",
    "consumes": [
      "application/json"
    ],
    "description": "Deletes the specified webhook subscription from the given user\naccount.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/users/%7Busername%7D/hooks/%7Buid%7D#delete",
    "method": "DELETE",
    "parameters": [
      {
        "description": "The installed webhook's id",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/users/{username}/hooks/{uid}",
    "responses": {
      "204": {
        "description": "When the webhook was deleted successfully"
      },
      "403": {
        "description": "If the authenticated user does not have permission to delete the webhook.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the webhook or user does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get For User",
    "consumes": [
      "application/json"
    ],
    "description": "Returns the webhook with the specified id installed on the given\nuser account.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/users/%7Busername%7D/hooks/%7Buid%7D#get",
    "method": "GET",
    "parameters": [
      {
        "description": "The installed webhook's id.",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/users/{username}/hooks/{uid}",
    "responses": {
      "200": {
        "description": "The webhook subscription object.",
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "404": {
        "description": "If the webhook or user does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Update For User",
    "consumes": [
      "application/json"
    ],
    "description": "Updates the specified webhook subscription.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/users/%7Busername%7D/hooks/%7Buid%7D#put",
    "method": "PUT",
    "parameters": [
      {
        "description": "The installed webhook's id",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "uid",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/users/{username}/hooks/{uid}",
    "responses": {
      "200": {
        "description": "The webhook subscription object.",
        "schema": {
          "$ref": "#/definitions/webhook_subscription"
        }
      },
      "403": {
        "description": "If the authenticated user does not have permission to update the webhook.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the webhook or user does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  }
]
