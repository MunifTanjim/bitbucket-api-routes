[
  {
    "apiName": "List Default Reviewers",
    "consumes": [
      "application/json"
    ],
    "description": "Returns the repository's default reviewers.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/default-reviewers#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/default-reviewers",
    "responses": {
      "200": {
        "description": "The paginated list of default reviewers"
      }
    }
  },
  {
    "apiName": "Delete Default Reviewer",
    "consumes": [
      "application/json"
    ],
    "description": "Removes a default reviewer from the repository.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/default-reviewers/%7Btarget_username%7D#delete",
    "method": "DELETE",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the username or the UUID of the default reviewer, surrounded by curly-braces, for example: `{account UUID}`. ",
        "in": "path",
        "name": "target_username",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}",
    "responses": {
      "default": {
        "description": "Unexpected error.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get Default Reviewer",
    "consumes": [
      "application/json"
    ],
    "description": "Returns the specified reviewer.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/default-reviewers/%7Btarget_username%7D#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the username or the UUID of the default reviewer, surrounded by curly-braces, for example: `{account UUID}`. ",
        "in": "path",
        "name": "target_username",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}",
    "responses": {
      "default": {
        "description": "Unexpected error.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Add Default Reviewer",
    "consumes": [
      "application/json"
    ],
    "description": "Adds the specified user to the repository's list of default\nreviewers.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/default-reviewers/%7Btarget_username%7D#put",
    "method": "PUT",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the username or the UUID of the default reviewer, surrounded by curly-braces, for example: `{account UUID}`. ",
        "in": "path",
        "name": "target_username",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/default-reviewers/{target_username}",
    "responses": {
      "default": {
        "description": "Unexpected error.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List",
    "consumes": [
      "application/json"
    ],
    "description": "Returns all pull requests on the specified repository.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "Only return pull requests that are in this state. This parameter can be repeated.",
        "enum": [
          "MERGED",
          "SUPERSEDED",
          "OPEN",
          "DECLINED"
        ],
        "in": "query",
        "name": "state",
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests",
    "responses": {
      "200": {
        "description": "All pull requests on the specified repository.",
        "schema": {
          "$ref": "#/definitions/paginated_pullrequests"
        }
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the specified repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Create",
    "consumes": [
      "application/json"
    ],
    "description": "Creates a new pull request where the destination repository is\nthis repository and the author is the authenticated user.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests#post",
    "method": "POST",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "The new pull request.",
        "in": "body",
        "name": "_body",
        "required": false,
        "schema": {
          "$ref": "#/definitions/pullrequest"
        }
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests",
    "responses": {
      "201": {
        "description": "The newly created pull request.",
        "headers": {
          "Location": {
            "description": "The URL of new newly created pull request.",
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/pullrequest"
        }
      },
      "400": {
        "description": "If the input document was invalid, or if the caller lacks the privilege to create repositories under the targeted account.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "401": {
        "description": "If the request was not authenticated.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List Activity Log",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a paginated list of the pull request's activity log.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/activity#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "The id of the pull request.",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "integer"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/activity",
    "responses": {
      "200": {
        "description": "The pull request activity log"
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the specified repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get",
    "consumes": [
      "application/json"
    ],
    "description": "Returns the specified pull request.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "The id of the pull request.",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "integer"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}",
    "responses": {
      "200": {
        "description": "The pull request object",
        "examples": {
          "application/json": {
            "author": {
              "account_id": "123456:daffbc08-1a80-4bd0-98bf-7997de0a3d10",
              "display_name": "Example Username",
              "links": {
                "avatar": {
                  "href": "https://bitbucket.org/account/example-username/avatar/"
                },
                "html": {
                  "href": "https://bitbucket.org/example-username/"
                },
                "self": {
                  "href": "https://api.bitbucket.org/2.0/users/example-username"
                }
              },
              "nickname": "example-username",
              "type": "user",
              "username": "example-username",
              "uuid": "{58021780-82b6-4517-b153-0ae73ce3e4b4}"
            },
            "close_source_branch": true,
            "closed_by": null,
            "comment_count": 0,
            "created_on": "2018-06-20T23:17:33.616037+00:00",
            "description": "Everything is awesome!",
            "destination": {
              "branch": {
                "name": "master"
              },
              "commit": {
                "hash": "230269fdfabd",
                "links": {
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs/commits/230269fdfabd"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/commit/230269fdfabd"
                  }
                },
                "type": "commit"
              },
              "repository": {
                "full_name": "example-username/bits_and_bobs",
                "links": {
                  "avatar": {
                    "href": "https://bytebucket.org/ravatar/%7B7708d810-964c-403f-aa6d-4e949280d614%7D?ts=python"
                  },
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs"
                  }
                },
                "name": "bits_and_bobs",
                "type": "repository",
                "uuid": "{7708d810-964c-403f-aa6d-4e949280d614}"
              }
            },
            "id": 1,
            "links": {
              "activity": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/activity"
              },
              "approve": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/approve"
              },
              "comments": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/comments"
              },
              "commits": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/commits"
              },
              "decline": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/decline"
              },
              "diff": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/diff"
              },
              "html": {
                "href": "https://bitbucket.org/example-username/bits_and_bobs/pull-requests/1"
              },
              "merge": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/merge"
              },
              "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1"
              },
              "statuses": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/statuses"
              }
            },
            "merge_commit": null,
            "participants": [],
            "reason": "",
            "reviewers": [],
            "source": {
              "branch": {
                "name": "branch_magnificent_internet"
              },
              "commit": {
                "hash": "c184aab5708b",
                "links": {
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs/commits/c184aab5708b"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/commit/c184aab5708b"
                  }
                },
                "type": "commit"
              },
              "repository": {
                "full_name": "example-username/bits_and_bobs",
                "links": {
                  "avatar": {
                    "href": "https://bytebucket.org/ravatar/%7B7708d810-964c-403f-aa6d-4e949280d614%7D?ts=python"
                  },
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs"
                  }
                },
                "name": "bits_and_bobs",
                "type": "repository",
                "uuid": "{7708d810-964c-403f-aa6d-4e949280d614}"
              }
            },
            "state": "OPEN",
            "summary": {
              "html": "<p>Everything is awesome!</p>",
              "markup": "markdown",
              "raw": "Everything is awesome!",
              "type": "rendered"
            },
            "task_count": 0,
            "title": "Change a cooperative standard to a smiling disease",
            "type": "pullrequest",
            "updated_on": "2018-06-20T23:17:33.616037+00:00"
          }
        },
        "schema": {
          "$ref": "#/definitions/pullrequest"
        }
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the repository or pull request does not exist",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Update",
    "consumes": [
      "application/json"
    ],
    "description": "Mutates the specified pull request.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D#put",
    "method": "PUT",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "The id of the pull request.",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "integer"
      },
      {
        "description": "The pull request that is to be updated.",
        "in": "body",
        "name": "_body",
        "required": false,
        "schema": {
          "$ref": "#/definitions/pullrequest"
        }
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}",
    "responses": {
      "200": {
        "description": "The updated pull request",
        "examples": {
          "application/json": {
            "author": {
              "account_id": "123456:daffbc08-1a80-4bd0-98bf-7997de0a3d10",
              "display_name": "Example Username",
              "links": {
                "avatar": {
                  "href": "https://bitbucket.org/account/example-username/avatar/"
                },
                "html": {
                  "href": "https://bitbucket.org/example-username/"
                },
                "self": {
                  "href": "https://api.bitbucket.org/2.0/users/example-username"
                }
              },
              "nickname": "example-username",
              "type": "user",
              "username": "example-username",
              "uuid": "{58021780-82b6-4517-b153-0ae73ce3e4b4}"
            },
            "close_source_branch": true,
            "closed_by": null,
            "comment_count": 0,
            "created_on": "2018-06-20T23:17:33.616037+00:00",
            "description": "Everything is awesome!",
            "destination": {
              "branch": {
                "name": "master"
              },
              "commit": {
                "hash": "230269fdfabd",
                "links": {
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs/commits/230269fdfabd"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/commit/230269fdfabd"
                  }
                },
                "type": "commit"
              },
              "repository": {
                "full_name": "example-username/bits_and_bobs",
                "links": {
                  "avatar": {
                    "href": "https://bytebucket.org/ravatar/%7B7708d810-964c-403f-aa6d-4e949280d614%7D?ts=python"
                  },
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs"
                  }
                },
                "name": "bits_and_bobs",
                "type": "repository",
                "uuid": "{7708d810-964c-403f-aa6d-4e949280d614}"
              }
            },
            "id": 1,
            "links": {
              "activity": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/activity"
              },
              "approve": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/approve"
              },
              "comments": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/comments"
              },
              "commits": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/commits"
              },
              "decline": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/decline"
              },
              "diff": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/diff"
              },
              "html": {
                "href": "https://bitbucket.org/example-username/bits_and_bobs/pull-requests/1"
              },
              "merge": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/merge"
              },
              "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1"
              },
              "statuses": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/statuses"
              }
            },
            "merge_commit": null,
            "participants": [],
            "reason": "",
            "reviewers": [],
            "source": {
              "branch": {
                "name": "branch_magnificent_internet"
              },
              "commit": {
                "hash": "c184aab5708b",
                "links": {
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs/commits/c184aab5708b"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/commit/c184aab5708b"
                  }
                },
                "type": "commit"
              },
              "repository": {
                "full_name": "example-username/bits_and_bobs",
                "links": {
                  "avatar": {
                    "href": "https://bytebucket.org/ravatar/%7B7708d810-964c-403f-aa6d-4e949280d614%7D?ts=python"
                  },
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs"
                  }
                },
                "name": "bits_and_bobs",
                "type": "repository",
                "uuid": "{7708d810-964c-403f-aa6d-4e949280d614}"
              }
            },
            "state": "OPEN",
            "summary": {
              "html": "<p>Everything is awesome!</p>",
              "markup": "markdown",
              "raw": "Everything is awesome!",
              "type": "rendered"
            },
            "task_count": 0,
            "title": "Change a cooperative standard to a smiling disease",
            "type": "pullrequest",
            "updated_on": "2018-06-20T23:17:33.616037+00:00"
          }
        },
        "schema": {
          "$ref": "#/definitions/pullrequest"
        }
      },
      "400": {
        "description": "If the input document was invalid.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "401": {
        "description": "If the request was not authenticated.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the repository or pull request id does not exist",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get Activity Log",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a paginated list of the pull request's activity log.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/activity#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "The id of the pull request.",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "integer"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/activity",
    "responses": {
      "200": {
        "description": "The pull request activity log"
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the specified repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Delete Approval",
    "consumes": [
      "application/json"
    ],
    "description": "Redact the authenticated user's approval of the specified pull\nrequest.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/approve#delete",
    "method": "DELETE",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/approve",
    "responses": {
      "204": {
        "description": "An empty response indicating the authenticated user's approval has been withdrawn."
      },
      "404": {
        "description": "The specified pull request or the repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Create Approval",
    "consumes": [
      "application/json"
    ],
    "description": "Approve the specified pull request as the authenticated user.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/approve#post",
    "method": "POST",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/approve",
    "responses": {
      "200": {
        "description": "The `participant` object recording that the authenticated user approved the pull request.",
        "schema": {
          "$ref": "#/definitions/participant"
        }
      },
      "404": {
        "description": "The specified pull request or the repository does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List Comments",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a paginated list of the pull request's comments.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/comments#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "The id of the pull request.",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "integer"
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments",
    "responses": {
      "200": {
        "description": "A paginated list of comments made on the given pull request, in reverse chronological order.",
        "schema": {
          "$ref": "#/definitions/paginated_pullrequest_comments"
        }
      },
      "403": {
        "description": "If the authenticated user does not have access to the pull request.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the pull request does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Create Comment",
    "consumes": [
      "application/json"
    ],
    "description": "Creates a new pull request comment.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/comments#post",
    "method": "POST",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      },
      {
        "description": "The id of the pull request.",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "integer"
      },
      {
        "description": "The comment object.",
        "in": "body",
        "name": "_body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/pullrequest_comment"
        }
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments",
    "responses": {
      "201": {
        "description": "The newly created comment.",
        "headers": {
          "Location": {
            "description": "The URL of the new comment",
            "type": "string"
          }
        },
        "schema": {
          "$ref": "#/definitions/pullrequest_comment"
        }
      },
      "403": {
        "description": "If the authenticated user does not have access to the pull request.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the pull request does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Delete Comment",
    "consumes": [
      "application/json"
    ],
    "description": "Deletes a specific pull request comment.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/comments/%7Bcomment_id%7D#delete",
    "method": "DELETE",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "comment_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}",
    "responses": {
      "204": {
        "description": "Successful deletion."
      },
      "403": {
        "description": "If the authenticated user does not have access to delete the pull request.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the pull request does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get Comment",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a specific pull request comment.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/comments/%7Bcomment_id%7D#get",
    "method": "GET",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "comment_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}",
    "responses": {
      "200": {
        "description": "The comment.",
        "schema": {
          "$ref": "#/definitions/pullrequest_comment"
        }
      },
      "403": {
        "description": "If the authenticated user does not have access to the pull request.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the pull request does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Update Comment",
    "consumes": [
      "application/json"
    ],
    "description": "Updates a specific pull request comment.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/comments/%7Bcomment_id%7D#put",
    "method": "PUT",
    "parameters": [
      {
        "description": "The contents of the updated comment.",
        "in": "body",
        "name": "_body",
        "required": true,
        "schema": {
          "$ref": "#/definitions/pullrequest_comment"
        }
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "comment_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/comments/{comment_id}",
    "responses": {
      "200": {
        "description": "The updated comment.",
        "schema": {
          "$ref": "#/definitions/pullrequest_comment"
        }
      },
      "403": {
        "description": "If the authenticated user does not have access to the pull request.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      },
      "404": {
        "description": "If the pull request does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List Commits",
    "consumes": [
      "application/json"
    ],
    "description": "Returns a paginated list of the pull request's commits.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/commits#get",
    "method": "GET",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/commits",
    "responses": {
      "default": {
        "description": "Unexpected error.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Decline",
    "consumes": [
      "application/json"
    ],
    "description": "Declines the pull request.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/decline#post",
    "method": "POST",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/decline",
    "responses": {
      "200": {
        "description": "The pull request object.",
        "examples": {
          "application/json": {
            "author": {
              "account_id": "123456:daffbc08-1a80-4bd0-98bf-7997de0a3d10",
              "display_name": "Example Username",
              "links": {
                "avatar": {
                  "href": "https://bitbucket.org/account/example-username/avatar/"
                },
                "html": {
                  "href": "https://bitbucket.org/example-username/"
                },
                "self": {
                  "href": "https://api.bitbucket.org/2.0/users/example-username"
                }
              },
              "nickname": "example-username",
              "type": "user",
              "username": "example-username",
              "uuid": "{58021780-82b6-4517-b153-0ae73ce3e4b4}"
            },
            "close_source_branch": true,
            "closed_by": null,
            "comment_count": 0,
            "created_on": "2018-06-20T23:17:33.616037+00:00",
            "description": "Everything is awesome!",
            "destination": {
              "branch": {
                "name": "master"
              },
              "commit": {
                "hash": "230269fdfabd",
                "links": {
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs/commits/230269fdfabd"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/commit/230269fdfabd"
                  }
                },
                "type": "commit"
              },
              "repository": {
                "full_name": "example-username/bits_and_bobs",
                "links": {
                  "avatar": {
                    "href": "https://bytebucket.org/ravatar/%7B7708d810-964c-403f-aa6d-4e949280d614%7D?ts=python"
                  },
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs"
                  }
                },
                "name": "bits_and_bobs",
                "type": "repository",
                "uuid": "{7708d810-964c-403f-aa6d-4e949280d614}"
              }
            },
            "id": 1,
            "links": {
              "activity": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/activity"
              },
              "approve": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/approve"
              },
              "comments": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/comments"
              },
              "commits": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/commits"
              },
              "decline": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/decline"
              },
              "diff": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/diff"
              },
              "html": {
                "href": "https://bitbucket.org/example-username/bits_and_bobs/pull-requests/1"
              },
              "merge": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/merge"
              },
              "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1"
              },
              "statuses": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/statuses"
              }
            },
            "merge_commit": null,
            "participants": [],
            "reason": "",
            "reviewers": [],
            "source": {
              "branch": {
                "name": "branch_magnificent_internet"
              },
              "commit": {
                "hash": "c184aab5708b",
                "links": {
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs/commits/c184aab5708b"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/commit/c184aab5708b"
                  }
                },
                "type": "commit"
              },
              "repository": {
                "full_name": "example-username/bits_and_bobs",
                "links": {
                  "avatar": {
                    "href": "https://bytebucket.org/ravatar/%7B7708d810-964c-403f-aa6d-4e949280d614%7D?ts=python"
                  },
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs"
                  }
                },
                "name": "bits_and_bobs",
                "type": "repository",
                "uuid": "{7708d810-964c-403f-aa6d-4e949280d614}"
              }
            },
            "state": "OPEN",
            "summary": {
              "html": "<p>Everything is awesome!</p>",
              "markup": "markdown",
              "raw": "Everything is awesome!",
              "type": "rendered"
            },
            "task_count": 0,
            "title": "Change a cooperative standard to a smiling disease",
            "type": "pullrequest",
            "updated_on": "2018-06-20T23:17:33.616037+00:00"
          }
        },
        "schema": {
          "$ref": "#/definitions/pullrequest"
        }
      },
      "555": {
        "description": "If the decline took too long and timed out.\nIn this case the caller should retry the request later.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get Diff",
    "consumes": [
      "application/json"
    ],
    "description": "Redirects to the [repository diff](../../diff/%7Bspec%7D)\nwith the revspec that corresponds to the pull request.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/diff#get",
    "method": "GET",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/diff",
    "responses": {
      "302": {
        "description": "Redirects to the [repository diff](../../diff/%7Bspec%7D) with the\nrevspec that corresponds to the pull request.\n"
      }
    }
  },
  {
    "apiName": "Get Diff Stat",
    "consumes": [
      "application/json"
    ],
    "description": "Redirects to the [repository diffstat](../../diffstat/%7Bspec%7D)\nwith the revspec that corresponds to the pull request.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/diffstat#get",
    "method": "GET",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/diffstat",
    "responses": {
      "302": {
        "description": "Redirects to the [repository diffstat](../../diffstat/%7Bspec%7D) with\nthe revspec that corresponds to pull request.\n"
      }
    }
  },
  {
    "apiName": "Merge",
    "consumes": [
      "application/json"
    ],
    "description": "Merges the pull request.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/merge#post",
    "method": "POST",
    "parameters": [
      {
        "description": "",
        "in": "body",
        "name": "_body",
        "required": false,
        "schema": {
          "$ref": "#/definitions/pullrequest_merge_parameters"
        }
      },
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/merge",
    "responses": {
      "200": {
        "description": "The pull request object.",
        "examples": {
          "application/json": {
            "author": {
              "account_id": "123456:daffbc08-1a80-4bd0-98bf-7997de0a3d10",
              "display_name": "Example Username",
              "links": {
                "avatar": {
                  "href": "https://bitbucket.org/account/example-username/avatar/"
                },
                "html": {
                  "href": "https://bitbucket.org/example-username/"
                },
                "self": {
                  "href": "https://api.bitbucket.org/2.0/users/example-username"
                }
              },
              "nickname": "example-username",
              "type": "user",
              "username": "example-username",
              "uuid": "{58021780-82b6-4517-b153-0ae73ce3e4b4}"
            },
            "close_source_branch": true,
            "closed_by": null,
            "comment_count": 0,
            "created_on": "2018-06-20T23:17:33.616037+00:00",
            "description": "Everything is awesome!",
            "destination": {
              "branch": {
                "name": "master"
              },
              "commit": {
                "hash": "230269fdfabd",
                "links": {
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs/commits/230269fdfabd"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/commit/230269fdfabd"
                  }
                },
                "type": "commit"
              },
              "repository": {
                "full_name": "example-username/bits_and_bobs",
                "links": {
                  "avatar": {
                    "href": "https://bytebucket.org/ravatar/%7B7708d810-964c-403f-aa6d-4e949280d614%7D?ts=python"
                  },
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs"
                  }
                },
                "name": "bits_and_bobs",
                "type": "repository",
                "uuid": "{7708d810-964c-403f-aa6d-4e949280d614}"
              }
            },
            "id": 1,
            "links": {
              "activity": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/activity"
              },
              "approve": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/approve"
              },
              "comments": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/comments"
              },
              "commits": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/commits"
              },
              "decline": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/decline"
              },
              "diff": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/diff"
              },
              "html": {
                "href": "https://bitbucket.org/example-username/bits_and_bobs/pull-requests/1"
              },
              "merge": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/merge"
              },
              "self": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1"
              },
              "statuses": {
                "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/pullrequests/1/statuses"
              }
            },
            "merge_commit": null,
            "participants": [],
            "reason": "",
            "reviewers": [],
            "source": {
              "branch": {
                "name": "branch_magnificent_internet"
              },
              "commit": {
                "hash": "c184aab5708b",
                "links": {
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs/commits/c184aab5708b"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs/commit/c184aab5708b"
                  }
                },
                "type": "commit"
              },
              "repository": {
                "full_name": "example-username/bits_and_bobs",
                "links": {
                  "avatar": {
                    "href": "https://bytebucket.org/ravatar/%7B7708d810-964c-403f-aa6d-4e949280d614%7D?ts=python"
                  },
                  "html": {
                    "href": "https://bitbucket.org/example-username/bits_and_bobs"
                  },
                  "self": {
                    "href": "https://api.bitbucket.org/2.0/repositories/example-username/bits_and_bobs"
                  }
                },
                "name": "bits_and_bobs",
                "type": "repository",
                "uuid": "{7708d810-964c-403f-aa6d-4e949280d614}"
              }
            },
            "state": "OPEN",
            "summary": {
              "html": "<p>Everything is awesome!</p>",
              "markup": "markdown",
              "raw": "Everything is awesome!",
              "type": "rendered"
            },
            "task_count": 0,
            "title": "Change a cooperative standard to a smiling disease",
            "type": "pullrequest",
            "updated_on": "2018-06-20T23:17:33.616037+00:00"
          }
        },
        "schema": {
          "$ref": "#/definitions/pullrequest"
        }
      },
      "555": {
        "description": "If the merge took too long and timed out.\nIn this case the caller should retry the request later",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get Patch",
    "consumes": [
      "application/json"
    ],
    "description": "",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/patch#get",
    "method": "GET",
    "parameters": [
      {
        "description": "",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "string"
      },
      {
        "description": "",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/patch",
    "responses": {
      "default": {
        "description": "Unexpected error.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List Statuses",
    "consumes": [
      "application/json"
    ],
    "description": "Returns all statuses (e.g. build results) for the given pull\nrequest.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/statuses#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "The id of the pull request.",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "integer"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/statuses",
    "responses": {
      "200": {
        "description": "A paginated list of all commit statuses for this pull request.",
        "schema": {
          "$ref": "#/definitions/paginated_commitstatuses"
        }
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the specified repository or pull request does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  }
]
