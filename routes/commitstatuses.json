[
  {
    "apiName": "List",
    "consumes": [
      "application/json"
    ],
    "description": "Returns all statuses (e.g. build results) for a specific commit.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "The commit's SHA1.",
        "in": "path",
        "name": "node",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/commit/{node}/statuses",
    "responses": {
      "200": {
        "description": "A paginated list of all commit statuses for this commit.",
        "schema": {
          "$ref": "#/definitions/paginated_commitstatuses"
        }
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the repository or commit does not exist",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Create Build Status",
    "consumes": [
      "application/json"
    ],
    "description": "Creates a new build status against the specified commit.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build#post",
    "method": "POST",
    "parameters": [
      {
        "description": "The new commit status object.",
        "in": "body",
        "name": "_body",
        "required": false,
        "schema": {
          "$ref": "#/definitions/commitstatus"
        }
      },
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "The commit's SHA1.",
        "in": "path",
        "name": "node",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build",
    "responses": {
      "201": {
        "description": "The newly created build status object.",
        "schema": {
          "$ref": "#/definitions/commitstatus"
        }
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the repository, commit, or build status key does not exist",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Get Build Status",
    "consumes": [
      "application/json"
    ],
    "description": "Returns the specified build status for a commit.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build/%7Bkey%7D#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "The commit's SHA1.",
        "in": "path",
        "name": "node",
        "required": true,
        "type": "string"
      },
      {
        "description": "The build status' unique key",
        "in": "path",
        "name": "key",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build/{key}",
    "responses": {
      "200": {
        "description": "The build status object with the specified key.",
        "schema": {
          "$ref": "#/definitions/commitstatus"
        }
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the repository, commit, or build status key does not exist",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "Update Build Status",
    "consumes": [
      "application/json"
    ],
    "description": "Used to update the current status of a build status object on the\nspecific commit.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/commit/%7Bnode%7D/statuses/build/%7Bkey%7D#put",
    "method": "PUT",
    "parameters": [
      {
        "description": "The updated build status object",
        "in": "body",
        "name": "_body",
        "required": false,
        "schema": {
          "$ref": "#/definitions/commitstatus"
        }
      },
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "The commit's SHA1.",
        "in": "path",
        "name": "node",
        "required": true,
        "type": "string"
      },
      {
        "description": "The build status' unique key",
        "in": "path",
        "name": "key",
        "required": true,
        "type": "string"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/commit/{node}/statuses/build/{key}",
    "responses": {
      "200": {
        "description": "The updated build status object.",
        "schema": {
          "$ref": "#/definitions/commitstatus"
        }
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the repository or build does not exist",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  },
  {
    "apiName": "List Pull Request Statuses",
    "consumes": [
      "application/json"
    ],
    "description": "Returns all statuses (e.g. build results) for the given pull\nrequest.",
    "documentationUrl": "https://developer.atlassian.com/bitbucket/api/2/reference/resource/repositories/%7Busername%7D/%7Brepo_slug%7D/pullrequests/%7Bpull_request_id%7D/statuses#get",
    "method": "GET",
    "parameters": [
      {
        "description": "This can either be the username or the UUID of the account, surrounded by curly-braces, for example: `{account UUID}`. An account is either a team or user. ",
        "in": "path",
        "name": "username",
        "required": true,
        "type": "string"
      },
      {
        "description": "The id of the pull request.",
        "in": "path",
        "name": "pull_request_id",
        "required": true,
        "type": "integer"
      },
      {
        "description": "This can either be the repository slug or the UUID of the repository, surrounded by curly-braces, for example: `{repository UUID}`. ",
        "in": "path",
        "name": "repo_slug",
        "required": true,
        "type": "string"
      }
    ],
    "path": "/repositories/{username}/{repo_slug}/pullrequests/{pull_request_id}/statuses",
    "responses": {
      "200": {
        "description": "A paginated list of all commit statuses for this pull request.",
        "schema": {
          "$ref": "#/definitions/paginated_commitstatuses"
        }
      },
      "401": {
        "description": "If the repository is private and the request was not authenticated."
      },
      "404": {
        "description": "If the specified repository or pull request does not exist.",
        "schema": {
          "$ref": "#/definitions/error"
        }
      }
    }
  }
]
